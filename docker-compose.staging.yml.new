# ========================================
# üê≥ Food Fast E-commerce - Docker Compose (Staging)
# ========================================
# Staging environment with production-like setup

version: '3.8'

name: food-fast-staging

# ========================================
# üîß COMMON CONFIGURATION
# ========================================
x-common-variables: &common-variables
  ENVIRONMENT: staging
  DEBUG: false
  SECRET_KEY: ${SECRET_KEY}

x-service-common: &service-common
  restart: unless-stopped
  networks:
    - food_fast_network
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

# ========================================
# üóÑÔ∏è INFRASTRUCTURE & SERVICES
# ========================================
services:
  # Infrastructure
  postgres:
    image: postgres:15-alpine
    container_name: food_fast_postgres_staging
    environment:
      POSTGRES_DB: food_fast_staging
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_staging:/var/lib/postgresql/data
      - ./scripts/init-dbs.sql:/docker-entrypoint-initdb.d/init-dbs.sql
    networks:
      - food_fast_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: food_fast_redis_staging
    ports:
      - "6380:6379"
    volumes:
      - redis_data_staging:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - food_fast_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Microservices
  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: food_fast_api_gateway_staging
    ports:
      - "8010:8000"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8000
      DATABASE_URL: sqlite+aiosqlite:///./api_gateway.db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  auth-service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: food_fast_auth_service_staging
    ports:
      - "8011:8001"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8001
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/auth_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/1
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  user-service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: food_fast_user_service_staging
    ports:
      - "8012:8002"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8002
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/user_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/2
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  product-service:
    build:
      context: ./product_service
      dockerfile: Dockerfile
    container_name: food_fast_product_service_staging
    ports:
      - "8013:8003"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8003
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/product_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/3
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  order-service:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: food_fast_order_service_staging
    ports:
      - "8014:8004"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8004
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/order_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/4
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  payment-service:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    container_name: food_fast_payment_service_staging
    ports:
      - "8015:8005"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8005
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/payment_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/5
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  notification-service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    container_name: food_fast_notification_service_staging
    ports:
      - "8016:8006"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8006
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/notification_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/6
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

  analytics-service:
    build:
      context: ./analytics_service
      dockerfile: Dockerfile
    container_name: food_fast_analytics_service_staging
    ports:
      - "8017:8007"
    environment:
      <<: *common-variables
      SERVICE_PORT: 8007
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/analytics_service_db
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/7
    volumes:
      - ./shared_code:/app/shared_code
    <<: *service-common

# ========================================
# üì¶ VOLUMES
# ========================================
volumes:
  postgres_data_staging:
  redis_data_staging:

# ========================================
# üåê NETWORKS
# ========================================
networks:
  food_fast_network:
    driver: bridge
