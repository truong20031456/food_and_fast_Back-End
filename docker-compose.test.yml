# Docker Compose for Testing Environment
# Optimized for CI/CD testing with fast startup and minimal resources

version: '3.8'

services:
  # ========================================
  # üóÑÔ∏è Test Databases  
  # ========================================
  postgres-test:
    image: postgres:15-alpine
    container_name: food-fast-postgres-test
    environment:
      POSTGRES_DB: foodfast_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts/init-dbs.sql:/docker-entrypoint-initdb.d/init-dbs.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d foodfast_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data:noexec,nosuid,size=100m

  redis-test:
    image: redis:7-alpine
    container_name: food-fast-redis-test
    command: redis-server --save "" --appendonly no
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    tmpfs:
      - /data:noexec,nosuid,size=50m

  # ========================================
  # üöÄ Microservices for Testing
  # ========================================
  api-gateway-test:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: food-fast-api-gateway-test
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  auth-service-test:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: food-fast-auth-service-test
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
      - SECRET_KEY=test_secret_key_for_testing
      - JWT_SECRET_KEY=test_jwt_secret_key_for_testing
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  user-service-test:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: food-fast-user-service-test
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  product-service-test:
    build:
      context: ./product_service
      dockerfile: Dockerfile
    container_name: food-fast-product-service-test
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  order-service-test:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: food-fast-order-service-test
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  payment-service-test:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    container_name: food-fast-payment-service-test
    ports:
      - "8005:8005"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
      - STRIPE_SECRET_KEY=test_stripe_key
      - STRIPE_PUBLISHABLE_KEY=test_stripe_pub_key
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  notification-service-test:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    container_name: food-fast-notification-service-test
    ports:
      - "8006:8006"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  analytics-service-test:
    build:
      context: ./analytics_service
      dockerfile: Dockerfile
    container_name: food-fast-analytics-service-test
    ports:
      - "8007:8007"
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_pass@postgres-test:5432/foodfast_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_test_data:
    driver: local

networks:
  default:
    name: food-fast-test-network
    driver: bridge
